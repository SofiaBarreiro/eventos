@page "/BuscarInvitacion"
@attribute [Authorize]


@using System.Security.Claims;
@using EventosCeremonial.Helpers;
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.WsFederation;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http
@inject Microsoft.JSInterop.IJSRuntime Jsruntime
@inject NavigationManager NavigationManager
@using System.Threading;
@using System.Threading.Tasks;

@code {
    private string _authMessage;
    private string _userId;

    public string Url = "/api/evento";

    public string UrlPersona = "/api/persona";
    LoggerManger logger = new LoggerManger();
    ClaimsPrincipal user;
    private string email;
     protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender != false)
        {
     
           NavigationManager.NavigateTo("/", true);

        }

        firstRender = false;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {

            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            user = authState.User;
            email = user.Identity.Name.ToLower();

            if (user.Identity.Name != null && !user.Identity.Name.Contains("@"))
            {

                email = user.Identity.Name.ToLower() + "@trabajo.gob.ar";//ES USUARIO MINISTERIO
            }
            else
            {
                NavigationManager.NavigateTo("/", true);

            }

            var datoGuardado = await Http.GetFromJsonAsync<Respuesta<Persona>>(UrlPersona + "/TraerId/" + email);


            if (datoGuardado.Data != null)
            {
                //ESTA EN BASE DE DATOS MODIFICAR

                var cuil = ClaimsPrincipalExtensions.GetCuil(user);

                if (cuil != "")
                {

                    datoGuardado.Data.NumeroDocumento = cuil;

                    Persona aux = datoGuardado.Data;

                    if (aux.NumeroDocumento.Length == 11)
                    {
                        aux.TipoDocumento = "CUIL"; //VAN A SER TODOS CUIL PORQUE ES LO QUE TIENE POR IDENTIDADES

                    }
                    var nada = await Http.PutAsJsonAsync<Persona>(UrlPersona + "/EditarDNI", aux);

                    //le EDITO EL DNI
                }



                //var retorno = await Http.GetFromJsonAsync<Respuesta<int>>(Url + "/TraerEventoInvitado/" + datoGuardado.Data.Id);


                //if (retorno.Data != null && retorno.Data != 0)
                //{
                //    //BUSCO EL INVITADO
                //    NavigationManager.NavigateTo("/evento/disp/" + retorno.Data, true);

                //}
                //else
                //{
                    //no esta invitado voy a index

                //}

            }
            else
            {

                //no esta en base de datos
                Persona aux = new Persona();

                aux.Nombre = ClaimsPrincipalExtensions.GetDisplayName(user);

                aux.MailContacto = ClaimsPrincipalExtensions.GetEmail(user).ToLower();

                aux.Apellido = "SIN APELLIDO";

                aux.NumeroDocumento = ClaimsPrincipalExtensions.GetCuil(user);
                if (aux.NumeroDocumento.Length == 11)
                {
                    aux.TipoDocumento = "CUIL"; //VAN A SER TODOS CUIL PORQUE ES LO QUE TIENE POR IDENTIDADES

                }


                var rta = await Http.PostAsJsonAsync<Persona>(UrlPersona + "/AgregarPersonaIndex", aux);

            }
             //NavigationManager.NavigateTo("/", false);


        }
        catch (Exception e)
        {
            logger.LogError("Error en buscarInvitacion", e);

        }

    }


}
