@page "/evento"
@*@attribute [Authorize]
*@
@inject HttpClient Http
@using System.IO;
@using System.Reflection;
@using EventosCeremonial.Helpers;
@inject IFileUpload fileUpload
@inject IJSRuntime js


<AuthorizeView Roles="Administrador, Soporte">

    <br />
    <br />
    <center class="panel-pane pane-titulo"><div class="pane-content"><h2 class="activities-sidbar">Eventos en curso</h2></div></center>
    <br />
    <br />

    <div class="row">
        <div class="col-12 text-left">
            <a type="button" class="btn btn-primary" href="evento/form">Nuevo</a>
        </div>
    </div>

    @if (oRespuesta.Data != null)
    {
        if (oRespuesta.Data.Count() > 10)
        {
            <div class="row col-md-6 float-end">
                <div class="input-group col col-md-6">
                    <input class="form-control border-end-0 border rounded-pill" type="text" @bind-value="textoBusqueda" id="inputBusqueda">
                    <span class="input-group-append">
                        <button class="btn btn-outline-secondary bg-white border-start-0 border rounded-pill ms-n3" id="botonBusqueda" type="button" @onclick="() =>MostrarResultado(oRespuesta.Data)">
                            <i class="fa fa-search"></i>
                        </button>
                    </span>
                </div>
            </div>

        }
    }
    <table class="table tabla-condensed table-striped dataTable no-footer tablasLargas " id="ponchoTable" aria-describedby="ponchoTable_info" role="grid">


        <thead hidden="@EsconderBusquedas">
            <tr role="row">
                <th colspan="6" style="text-align: center;">Resultados encontrados</th>
            </tr>
            <tr role="row">
                <th class="sorting" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="">
                    Nombre
                </th>
                <th class="sorting" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="">
                    Formato
                </th>
                <th class="sorting col-3" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="">
                    Inicio
                </th>
                <th class="sorting" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="">
                    Cupo
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>


        <tbody hidden="@EsconderBusquedas">
            @foreach (var oElement in listaBusqueda)
            {
                <tr role="row" class="table-danger">
                    <td class="" data-title="Nombre">
                        <a href="/evento/disp/@oElement.Id">@oElement.Nombre</a>
                    </td>
                    <td class="" data-title="Formato">
                        <p>@oElement.Formato</p>
                    </td>
                    <td class="" data-title="Inicio">
                        <p>@oElement.FechaHoraInicio.Value.ToString("dd/MM/yy HH:MM ") hs</p>
                    </td>

                    <td class="" data-title="Cupo">
                        <p>@oElement.Cupo</p>
                    </td>
                    <td>
                        <a href="/persona/imports/@oElement.Id"><i class="fa fa-user-friends"></i></a>
                    </td>
                    <td>
                        <a href="/evento/form/@oElement.Id"><i class="fa fa-edit"></i></a>
                    </td>
                    <td>
                        <a href="/evento/delete/@oElement.Id"><i class="fa fa-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>




        <thead>
            <tr role="row">
                <th class="sorting" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="">
                    Nombre
                </th>
                <th class="sorting" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="">
                    Formato
                </th>
                <th class="sorting col-3" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="">
                    Inicio
                </th>
                <th class="sorting" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="">
                    Cupo
                </th>
                <th></th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (oRespuesta.Data == null && oRespuesta.Exito == 0)
            {
                <tr role="row" class="odd">
                    <td class="sorting_1" colspan="8">
                        <p>@textoNoHayRegistros</p>
                    </td>
                </tr>
            }
            @if (oRespuesta != null && oRespuesta.Data != null)
            {
                @foreach (var oElement in oRespuesta.Data)
                {
                    <tr role="row" class="odd">
                        <td class="" data-title="Nombre">
                            <a href="/evento/disp/@oElement.Id">@oElement.Nombre</a>
                        </td>
                        <td class="" data-title="Formato">
                            <p>@oElement.Formato</p>
                        </td>
                        <td class="" data-title="Inicio">
                            <p>@oElement.FechaHoraInicio.Value.ToString("dd/MM/yy HH:MM ") hs</p>
                        </td>

                        <td class="" data-title="Cupo">
                            <p>@oElement.Cupo</p>
                        </td>
                        <td>
                            <a href="/persona/imports/@oElement.Id"><i class="fa fa-user-friends"></i></a>
                        </td>
                        <td>
                            <a href="/evento/form/@oElement.Id"><i class="fa fa-edit"></i></a>
                        </td>
                        <td>
                            <a href="/evento/delete/@oElement.Id"><i class="fa fa-trash"></i></a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

</AuthorizeView>

@code {
    public string Url = "/api/evento";
    public Respuesta<List<Evento>> oRespuesta = new Respuesta<List<Evento>>();
    Respuesta<Evento> oRespuestaEvento = new Respuesta<Evento>();
    public string textoNoHayRegistros { get; set; } = "Cargando...";

    public string textoBusqueda { get; set; } = "";

    private bool EsconderBusquedas { get; set; } = true;
    List<Evento> listaBusqueda = new List<Evento>();
    LoggerManger logger = new LoggerManger();

    protected async override void OnAfterRender(bool firstRender)
    {

        if (oRespuesta.Data != null)
        {

            if (oRespuesta.Data.Count() > 10)
            {
                if (firstRender == false)
                {

                    await js.InvokeVoidAsync("agregarEnter");

                }
            }
        }
        firstRender = true;
    }
    //BUSCA CON EL TEXTO INGRESADO TODOS LOS EVENTOS QUE CONTENGAN ESE TEXTO EN EL TITULO
    public async Task MostrarResultado(List<Evento> listaEventos)
    {
        try
        {
            if (textoBusqueda != null)
            {

                if (textoBusqueda != "" && textoBusqueda.Length > 3)
                {

                    List<Evento> rta1 = listaEventos.Where(x => x.Nombre.ToLower().Contains(textoBusqueda.ToLower())).ToList();

                    listaBusqueda = rta1;

                }
            }
        }
        catch (Exception e)
        {

            logger.LogError("Error en busqueda de eventos", e);

        }
        if (listaBusqueda.Count() > 0)
        {
            //SI LO ENCUENTRA MUESTA LA TABLA DE RESULTADOS
            EsconderBusquedas = false;
        }
        else
        {
            EsconderBusquedas = true;
        }
    }
    protected override async Task OnInitializedAsync()
    {
        //TRAE SOLO LOS EVENTOS QUE SE ENCUENTRAN ACTIVOS
        oRespuesta = await Http.GetFromJsonAsync<Respuesta<List<Evento>>>(Url + "/TraerSoloActivos");
        if (oRespuesta.Data != null)
        {

            if (oRespuesta.Data.Count() == 0)
            {
                textoNoHayRegistros = "No se encontraron registros";
                oRespuesta.Data = null;
            }
        }
        else
        {
                            textoNoHayRegistros = "No se encontraron registros";

        }
    }
}
