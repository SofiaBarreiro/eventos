@page "/plataforma"
@attribute [Authorize]

@using System.Net.Http
@using System.Net.Http.Json
@using Data
@using Data.Response

@inject HttpClient Http

<AuthorizeView Roles="Administrador, Soporte">

    <br />
    <br />
    <center class="panel-pane pane-titulo"><div class="pane-content"><h2 class="activities-sidbar">Plataformas</h2></div></center>
    <br />
    <br />
    <div class="row">
        <div class="col-12 text-left">
            <a type="button" class="btn btn-primary" href="plataforma/form">Nueva</a>
        </div>
    </div>

    <table class="table tabla-condensed table-striped dataTable no-footer  " id="ponchoTable" aria-describedby="ponchoTable_info" role="grid">
        @if (oRespuesta.Data == null)
        {
            <tr role="row" class="odd">
                <td class="sorting_1" colspan="5">
                    <p>@textoNoHayRegistros</p>
                </td>
            </tr>
        }
        @if (oRespuesta != null && oRespuesta.Data != null)
        {
            <thead>
                <tr role="row">

                    <th class="sorting" tabindex="0" aria-controls="ponchoTable" rowspan="1" colspan="1" aria-label="Nombre: Activar para ordenar la columna de manera ascendente">
                        Nombre
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var oElement in oRespuesta.Data)
                {
                    <tr role="row" class="odd">

                        <td class="" data-title="Nombre">
                            <p>@oElement.Nombre</p>
                        </td>
                        <td>
                            <a href="/plataforma/form/@oElement.Id"><i class="fa fa-edit"></i></a>
                        </td>
                        @* <td>
                            <a href="/plataforma/delete/@oElement.Id"><i class="fa fa-trash"></i></a>
                            </td>*@
                    </tr>
                }
            </tbody>
        }
    </table>
</AuthorizeView>

@code {
    public string Url = "/api/plataforma";
    public string textoNoHayRegistros { get; set; } = "Cargando...";

    public Respuesta<List<Plataforma>> oRespuesta = new Respuesta<List<Plataforma>>();

    protected override async Task OnInitializedAsync()
    {
        oRespuesta = await Http.GetFromJsonAsync<Respuesta<List<Plataforma>>>(Url);
        if (oRespuesta.Data != null)
        {
            if (oRespuesta.Data.Count() == 0)
            {
                textoNoHayRegistros = "No se encontraron registros";
            }
        }
        else
        {
            
                            textoNoHayRegistros = "No se encontraron registros";

        }
    }
}
