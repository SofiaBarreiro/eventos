@page "/loginAD"

@using System.Security.Claims;
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authentication.WsFederation;
@using Microsoft.AspNetCore.Authentication.Cookies;

@inject AuthenticationStateProvider AuthenticationStateProvider


@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor

@inject NavigationManager NavigationManager




@code {

  

    protected override async Task OnInitializedAsync()
    {
  
        //try
        //{

        //var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        //ClaimsPrincipal user = authState.User;
        //if (user.Identities.Any(x => x.IsAuthenticated))
        //{
                    
        //    httpContextAccessor.HttpContext.Session.Clear();

        //}



        //}
        //catch (Exception e)
        //{
            

        //}

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();


        ClaimsPrincipal user = authState.User;

        if (!user.Identities.Any(x => x.IsAuthenticated))
        {

            await httpContextAccessor.HttpContext.ChallengeAsync(WsFederationDefaults.AuthenticationScheme).ConfigureAwait(false);

        }

        if (user.Identities.Any(x => x.IsAuthenticated))
        {


            NavigationManager.NavigateTo("/", true);


        }

    }
}
